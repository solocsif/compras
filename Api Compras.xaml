<Activity mc:Ignorable="sap sap2010" x:Class="Main" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="1378,35887" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:sc="clr-namespace:System.ComponentModel;assembly=System.ComponentModel.TypeConverter" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models</x:String>
      <x:String>UiPath.UIAutomationNext.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ObjectLibrary</x:String>
      <x:String>UiPath.Platform.SyncObjects</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.UIAutomationNext.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.CV</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>UiPath.UIAutomationNext.Activities.Models</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Semantic.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Models.FilterBuilder</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Models</x:String>
      <x:String>UiPath.IntegrationService.Activities.Runtime.Activities</x:String>
      <x:String>UiPath.Platform.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.PDF.ExtractPDFText</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.PDF</x:String>
      <x:String>UiPath.Vision.OCR</x:String>
      <x:String>UiPath.OCR.Contracts</x:String>
      <x:String>UiPath.OCR.Activities</x:String>
      <x:String>UiPath.OCR.Contracts.Activities</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DataExtraction</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities.DocumentClassification</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.DataExtraction</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Results</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts.Dom</x:String>
      <x:String>UiPath.IntelligentOCR.StudioWeb.Activities</x:String>
      <x:String>UiPath.DocumentProcessing.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Models.ExtractData</x:String>
      <x:String>UiPath.Web</x:String>
      <x:String>UiPath.Web.Activities</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>System.Dynamic</x:String>
      <x:String>System.Collections.Specialized</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>UiPath.IntegrationService.Activities.Runtime</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Vision.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Contracts</AssemblyReference>
      <AssemblyReference>UiPath.DocumentProcessing.Contracts</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.Web</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>netstandard</AssemblyReference>
      <AssemblyReference>System.Collections.Specialized</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">False</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Secuencia" sap:VirtualizedContainerService.HintSize="1388,35822" sap2010:WorkflowViewState.IdRef="Sequence_10">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="jsonbody" />
      <Variable x:TypeArguments="x:String" Name="salida" />
      <Variable x:TypeArguments="x:String" Name="Acesskey" />
      <Variable x:TypeArguments="njl:JObject" Name="jsonresponse" />
      <Variable x:TypeArguments="x:Int32" Name="Contador" />
      <Variable x:TypeArguments="x:Double" Name="Cantidad2" />
      <Variable x:TypeArguments="x:Double" Name="PrecioUnitario2" />
      <Variable x:TypeArguments="x:String" Name="ValorFinal2" />
      <Variable x:TypeArguments="x:Double" Name="ValorFinal3" />
      <Variable x:TypeArguments="x:String" Name="VB" />
      <Variable x:TypeArguments="x:Int32" Name="Contador2" />
      <Variable x:TypeArguments="x:String" Name="PrecioUnitario" />
      <Variable x:TypeArguments="x:String" Name="Descuento" />
      <Variable x:TypeArguments="x:String" Name="Iva" />
      <Variable x:TypeArguments="sd:DataTable" Name="Rowsdt" />
      <Variable x:TypeArguments="x:Int32" Name="filasproductos" />
      <Variable x:TypeArguments="x:String" Name="datoslimpios" />
      <Variable x:TypeArguments="x:String" Name="NameProducto1" />
      <Variable x:TypeArguments="x:String" Name="NameProducto" />
      <Variable x:TypeArguments="x:String" Name="Datos" />
      <Variable x:TypeArguments="x:String" Name="Cantidad" />
      <Variable x:TypeArguments="x:String" Name="cufe" />
      <Variable x:TypeArguments="x:String" Name="ValorFinal" />
      <Variable x:TypeArguments="x:String" Name="ValorIva" />
      <Variable x:TypeArguments="x:String" Name="Nit" />
      <Variable x:TypeArguments="sd:DataTable" Name="ExtractDataTable" />
      <Variable x:TypeArguments="x:String" Name="variable1" />
      <Variable x:TypeArguments="x:String" Name="Consecutivo" />
      <Variable x:TypeArguments="x:String" Name="Prefijo" />
      <Variable x:TypeArguments="x:String" Name="Fecha" />
      <Variable x:TypeArguments="x:String" Name="ValorU" />
      <Variable x:TypeArguments="x:String" Name="cufe2" />
      <Variable x:TypeArguments="x:String" Name="CantidadProducto2" />
      <Variable x:TypeArguments="x:String" Name="PreciounitarioProducto2" />
      <Variable x:TypeArguments="x:String" Name="IvaProducto2" />
      <Variable x:TypeArguments="x:String" Name="Descuentoproducto2" />
      <Variable x:TypeArguments="x:String" Name="ValorIvaproducto2" />
      <Variable x:TypeArguments="x:String" Name="variable3" />
      <Variable x:TypeArguments="x:String" Name="variable2" />
      <Variable x:TypeArguments="x:String" Name="ValorFinalProducto2" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="columnNames" />
      <Variable x:TypeArguments="x:String" Name="columname" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="1326,114" sap2010:WorkflowViewState.IdRef="Assign_26">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[Contador]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">[Contador+1]</InArgument>
      </Assign.Value>
    </Assign>
    <ueab:SequenceX DisplayName="Ámbito del proceso de Excel único" sap:VirtualizedContainerService.HintSize="1326,35620" sap2010:WorkflowViewState.IdRef="SequenceX_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" CreateNewFile="False" DisplayName="Utilice el archivo de Excel" sap:VirtualizedContainerService.HintSize="1264,35509" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath="Compras.xlsx">
        <ueab:ExcelApplicationCard.Body>
          <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="1230,35217" sap2010:WorkflowViewState.IdRef="Sequence_15">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja1&quot;).Cell(&quot;A&quot;+Contador.ToString)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="1168,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_1">
                <ueab:ReadCellValueX.SaveTo>
                  <OutArgument x:TypeArguments="x:String">[cufe]</OutArgument>
                </ueab:ReadCellValueX.SaveTo>
              </ueab:ReadCellValueX>
              <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja1&quot;).Cell(&quot;B&quot;+Contador.ToString)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="1168,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_2">
                <ueab:ReadCellValueX.SaveTo>
                  <OutArgument x:TypeArguments="x:String">[Consecutivo]</OutArgument>
                </ueab:ReadCellValueX.SaveTo>
              </ueab:ReadCellValueX>
              <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja1&quot;).Cell(&quot;C&quot;+Contador.ToString)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="1168,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_3">
                <ueab:ReadCellValueX.SaveTo>
                  <OutArgument x:TypeArguments="x:String">[Prefijo]</OutArgument>
                </ueab:ReadCellValueX.SaveTo>
              </ueab:ReadCellValueX>
              <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja1&quot;).Cell(&quot;D&quot;+Contador.ToString)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="1168,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_4">
                <ueab:ReadCellValueX.SaveTo>
                  <OutArgument x:TypeArguments="x:String">[Fecha]</OutArgument>
                </ueab:ReadCellValueX.SaveTo>
              </ueab:ReadCellValueX>
              <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja1&quot;).Cell(&quot;E&quot;+Contador.ToString)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="1168,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_5">
                <ueab:ReadCellValueX.SaveTo>
                  <OutArgument x:TypeArguments="x:String">[Nit]</OutArgument>
                </ueab:ReadCellValueX.SaveTo>
              </ueab:ReadCellValueX>
              <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja1&quot;).Cell(&quot;F&quot;+Contador.ToString)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="1168,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_6">
                <ueab:ReadCellValueX.SaveTo>
                  <OutArgument x:TypeArguments="x:String">[ValorU]</OutArgument>
                </ueab:ReadCellValueX.SaveTo>
              </ueab:ReadCellValueX>
              <ueab:ClearRangeX DisplayName="Borrar hoja/rango/tabla" HasHeaders="False" sap:VirtualizedContainerService.HintSize="1168,148" sap2010:WorkflowViewState.IdRef="ClearRangeX_1" TargetRange="[Excel.Sheet(&quot;Hoja3&quot;).Range(&quot;A1:Z8096&quot;)]" />
              <ueab:ClearRangeX DisplayName="Borrar hoja/rango/tabla" HasHeaders="False" sap:VirtualizedContainerService.HintSize="1168,148" sap2010:WorkflowViewState.IdRef="ClearRangeX_2" TargetRange="[Excel.Sheet(&quot;Hoja4&quot;).Range(&quot;A1:Z8096&quot;)]" />
              <uix:NApplicationCard AttachMode="ByInstance" DisplayName="Utilizar Navegador Chrome: DIAN | Acceder" sap:VirtualizedContainerService.HintSize="1168,33687" sap2010:WorkflowViewState.IdRef="NApplicationCard_2" InteractionMode="DebuggerApi" ScopeGuid="1ac3118a-ace7-4991-9ace-f92637086b4c" Version="V2">
                <uix:NApplicationCard.Body>
                  <ActivityAction x:TypeArguments="x:Object">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="1134,33447" sap2010:WorkflowViewState.IdRef="Sequence_14">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <uix:NTypeInto ActivateBefore="True" ClickBeforeMode="Single" DisplayName="Escribir en 'CUFE o UUID'" EmptyFieldMode="SingleLine" sap:VirtualizedContainerService.HintSize="1072,286" sap2010:WorkflowViewState.IdRef="NTypeInto_1" ScopeIdentifier="1ac3118a-ace7-4991-9ace-f92637086b4c" Text="[cufe]" Version="V3">
                        <uix:NTypeInto.Target>
                          <uix:TargetAnchorable BrowserURL="https://catalogo-vpfe.dian.gov.co/User/SearchDocument" CVScreenId="66030dca-0cfd-47ff-b35a-8dbbace7e91c" CvElementArea="812, 557, 452, 43" CvType="InputBox" DesignTimeRectangle="814, 559, 449, 40" DesignTimeScaleFactor="1" ElementType="InputBox" FullSelectorArgument="&lt;webctrl id='DocumentKey' tag='INPUT' /&gt;" FuzzySelectorArgument="&lt;webctrl id='DocumentKey' tag='INPUT' type='text' class='form-control' placeholder='Ingrese el código CUFE o UUID' aaname='CUFE o UUID' /&gt;" Guid="5bce3e66-84a0-4dc2-8322-c3f7ae6ba6b3" InformativeScreenshot="d50ff8dd458659d112909c20083a7914.png" IsResponsive="True" ScopeSelectorArgument="&lt;html app='chrome.exe' title='DIAN | Acceder' /&gt;" SearchSteps="FuzzySelector, CV" Version="V4" Visibility="Interactive">
                            <uix:TargetAnchorable.Anchors>
                              <scg:List x:TypeArguments="uix:ITarget" Capacity="1">
                                <uix:Target CVScreenId="66030dca-0cfd-47ff-b35a-8dbbace7e91c" CvTextArea="812, 534, 83, 13" CvTextArgument="CUFE O UUID" CvType="Text" DesignTimeRectangle="814, 531, 81, 20" ElementType="Text" FullSelectorArgument="&lt;webctrl tag='LABEL' /&gt;" FuzzySelectorArgument="&lt;webctrl tag='LABEL' type='' class='control-label' aaname='CUFE o UUID' check:innerText='CUFE o UUID' /&gt;" Guid="3532a8b2-1eb2-4cb7-9492-b246a7301441" SearchSteps="FuzzySelector, CV" />
                              </scg:List>
                            </uix:TargetAnchorable.Anchors>
                          </uix:TargetAnchorable>
                        </uix:NTypeInto.Target>
                        <uix:NTypeInto.VerifyOptions>
                          <uix:VerifyExecutionTypeIntoOptions DisplayName="{x:Null}" Mode="Appears">
                            <uix:VerifyExecutionTypeIntoOptions.Retry>
                              <InArgument x:TypeArguments="x:Boolean" />
                            </uix:VerifyExecutionTypeIntoOptions.Retry>
                            <uix:VerifyExecutionTypeIntoOptions.Timeout>
                              <InArgument x:TypeArguments="x:Double" />
                            </uix:VerifyExecutionTypeIntoOptions.Timeout>
                          </uix:VerifyExecutionTypeIntoOptions>
                        </uix:NTypeInto.VerifyOptions>
                      </uix:NTypeInto>
                      <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Clic 'Buscar'" sap:VirtualizedContainerService.HintSize="1072,225" sap2010:WorkflowViewState.IdRef="NClick_1" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="1ac3118a-ace7-4991-9ace-f92637086b4c" Version="V3">
                        <uix:NClick.Target>
                          <uix:TargetAnchorable BrowserURL="https://catalogo-vpfe.dian.gov.co/User/SearchDocument" CVScreenId="66030dca-0cfd-47ff-b35a-8dbbace7e91c" CvElementArea="812, 612, 113, 50" CvTextArea="837, 629, 63, 15" CvTextArgument="Buscar" CvType="Button" DesignTimeRectangle="814, 614, 109, 46" DesignTimeScaleFactor="1" ElementType="Button" FullSelectorArgument="&lt;webctrl tag='BUTTON' /&gt;" FuzzySelectorArgument="&lt;webctrl tag='BUTTON' type='' class='btn btn-primary search-document margin-top-40' aaname='             Buscar         ' check:innerText='Buscar' /&gt;" Guid="0555b439-08df-4bb6-956c-3677436f52ec" InformativeScreenshot="f8562888ce2c5d7536146ec599a8e9a6.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='DIAN | Acceder' /&gt;" SearchSteps="FuzzySelector, CV" Version="V4" Visibility="Interactive" />
                        </uix:NClick.Target>
                        <uix:NClick.VerifyOptions>
                          <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                            <uix:VerifyExecutionOptions.Retry>
                              <InArgument x:TypeArguments="x:Boolean" />
                            </uix:VerifyExecutionOptions.Retry>
                            <uix:VerifyExecutionOptions.Timeout>
                              <InArgument x:TypeArguments="x:Double" />
                            </uix:VerifyExecutionOptions.Timeout>
                          </uix:VerifyExecutionOptions>
                        </uix:NClick.VerifyOptions>
                      </uix:NClick>
                      <uix:NClick ActivateBefore="True" ClickType="Single" DisplayName="Clic 'Descargar PDF'" sap:VirtualizedContainerService.HintSize="1072,225" sap2010:WorkflowViewState.IdRef="NClick_2" KeyModifiers="None" MouseButton="Left" ScopeIdentifier="1ac3118a-ace7-4991-9ace-f92637086b4c" Version="V3">
                        <uix:NClick.Target>
                          <uix:TargetAnchorable BrowserURL="https://catalogo-vpfe.dian.gov.co/Document/ShowDocumentToPublic/b89d53433ba3d2d1beb36a3a5ccdab95bf8f18801059dd02b79e46a74a917879799151c5acee42369a59f11967407b7b?Token=727e04c5487c4f86a7e689ea1295d64df1a610863fad70d3036d45acec6417ee" CVScreenId="abbe5c3a-014f-49d9-8acb-11dc134edaa0" CvTextArea="1744, 386, 105, 17" CvTextArgument="Descargar PDF" CvType="Text" DesignTimeRectangle="1727, 385, 121, 17" DesignTimeScaleFactor="1" ElementType="Text" FullSelectorArgument="&lt;webctrl parentid='html-gdoc' tag='A' /&gt;" FuzzySelectorArgument="&lt;webctrl parentid='html-gdoc' tag='A' type='' class='downloadPDFUrl' aaname='                                  Descargar PDF                             ' check:innerText='Descargar PDF' /&gt;" Guid="0ddcd0c2-ae34-490d-ac22-6bf59cf29d6d" InformativeScreenshot="0bb610c166bbc1d107eebc393d045ba1.png" ScopeSelectorArgument="&lt;html app='chrome.exe' title='DIAN | Detalles del documento' /&gt;" SearchSteps="FuzzySelector, CV" Version="V4" Visibility="Interactive" />
                        </uix:NClick.Target>
                        <uix:NClick.VerifyOptions>
                          <uix:VerifyExecutionOptions DisplayName="{x:Null}" Mode="Appears">
                            <uix:VerifyExecutionOptions.Retry>
                              <InArgument x:TypeArguments="x:Boolean" />
                            </uix:VerifyExecutionOptions.Retry>
                            <uix:VerifyExecutionOptions.Timeout>
                              <InArgument x:TypeArguments="x:Double" />
                            </uix:VerifyExecutionOptions.Timeout>
                          </uix:VerifyExecutionOptions>
                        </uix:NClick.VerifyOptions>
                      </uix:NClick>
                      <Delay DisplayName="Retraso" Duration="00:00:05" sap:VirtualizedContainerService.HintSize="1072,122" sap2010:WorkflowViewState.IdRef="Delay_1" />
                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="1072,114" sap2010:WorkflowViewState.IdRef="Assign_27">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[cufe2]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[cufe]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="1072,114" sap2010:WorkflowViewState.IdRef="Assign_28">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[cufe]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[cufe+".pdf"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="1072,114" sap2010:WorkflowViewState.IdRef="Assign_29">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[cufe]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">["C:\Users\User\Downloads\"+cufe]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <uix:NApplicationCard AttachMode="ByInstance" CloseMode="Always" DisplayName="b89d53433ba3d2d1beb36a3a5ccdab95bf8f18801059d" sap:VirtualizedContainerService.HintSize="1072,32157" sap2010:WorkflowViewState.IdRef="NApplicationCard_1" ScopeGuid="e3b8ac46-2984-438e-8dd5-80404a9e75a5" Version="V2" WindowResize="Maximize">
                        <uix:NApplicationCard.Body>
                          <ActivityAction x:TypeArguments="x:Object">
                            <ActivityAction.Argument>
                              <DelegateInArgument x:TypeArguments="x:Object" Name="WSSessionData" />
                            </ActivityAction.Argument>
                            <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="1038,31841" sap2010:WorkflowViewState.IdRef="Sequence_11">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <uix:NExtractData AppendResults="False" ContinueOnError="True" DataTable="[ExtractDataTable]" DisplayName="Extraer datos de tabla 'Extraer datos de tabla'" ExtractDataSettings="&lt;Table xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' Type='Table' AddCvHeader='true' IsScrollEnabled='false'&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-0' ReferenceIdx='0' Name='Column-0' IsDeleted='true'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-1' ReferenceIdx='1' Name='Column-1' IsDeleted='true'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-2' ReferenceIdx='2' Name='Column-2'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-3' ReferenceIdx='3' Name='Column-3' IsDeleted='true'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-4' ReferenceIdx='4' Name='Column-4'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-5' ReferenceIdx='5' Name='Column-5'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-6' ReferenceIdx='6' Name='Column-6' IsDeleted='true'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-7' ReferenceIdx='7' Name='Column-7'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='IMPUESTO  S' ReferenceIdx='8' Name='IMPUESTO  S'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-9' ReferenceIdx='9' Name='Column-9' IsDeleted='true'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Preci  o   unitari  o   d  e   vent  a' ReferenceIdx='10' Name='Preci  o   unitari  o   d  e   vent  a'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-11' ReferenceIdx='11' Name='Column-11'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-12' ReferenceIdx='12' Name='Column-12' IsDeleted='true'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-13' ReferenceIdx='13' Name='Column-13' IsDeleted='true'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-14' ReferenceIdx='14' Name='Column-14' IsDeleted='true'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&lt;/Table&gt;" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="976,189" sap2010:WorkflowViewState.IdRef="NExtractData_1" LimitExtractionTo="None" MaximumResults="0" ScopeIdentifier="e3b8ac46-2984-438e-8dd5-80404a9e75a5" Version="V3">
                                <uix:NExtractData.Target>
                                  <uix:TargetAnchorable ContentHash="5-Sg7Q3mXkOxKdpi4y0rPw" DesignTimeRectangle="709, 742, 808, 88" DesignTimeScaleFactor="1" ElementType="Table" FullSelectorArgument="&lt;wnd aaname='Panel de documentos' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl role='table' /&gt;" Guid="726f732d-a40b-4162-9c25-51c33687c8f6" InformativeScreenshot="d212e16f63667c6bc87a323eae4024f5.png" Reference="0itd1ZoWLU-hfN2MqNp32A/B9633pfUW0WmU7kxC1m9KQ" ScopeSelectorArgument="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='7ce08d8983f6736ddd97038ed7d41445b5f58673eebc84611b7a9b47569e2e33*' /&gt;" SearchSteps="Selector" Version="V4" Visibility="Interactive" />
                                </uix:NExtractData.Target>
                              </uix:NExtractData>
                              <If Condition="[ExtractDataTable.Rows.Count = 0 OrElse Not ExtractDataTable.AsEnumerable().Any(Function(row) Not row.ItemArray.All(Function(field) String.IsNullOrWhiteSpace(field.ToString())))]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="976,541" sap2010:WorkflowViewState.IdRef="If_1">
                                <If.Then>
                                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,268" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <uix:NExtractData AppendResults="False" ContinueOnError="True" DataTable="[ExtractDataTable]" DisplayName="Extraer datos de tabla 'Extraer datos de tabla(1)'" ExtractDataSettings="&lt;Table xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xmlns:xsd='http://www.w3.org/2001/XMLSchema' Type='Table' AddCvHeader='true' IsScrollEnabled='false'&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-0' ReferenceIdx='0' Name='Column-0' IsDeleted='true'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-1' ReferenceIdx='1' Name='Column-1' IsDeleted='true'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-2' ReferenceIdx='2' Name='Column-2'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-3' ReferenceIdx='3' Name='Column-3' IsDeleted='true'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-4' ReferenceIdx='4' Name='Column-4'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-5' ReferenceIdx='5' Name='Column-5'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-6' ReferenceIdx='6' Name='Column-6'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='I' ReferenceIdx='7' Name='I'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='MPUES' ReferenceIdx='8' Name='MPUES'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='TO  S' ReferenceIdx='9' Name='TO  S'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-10' ReferenceIdx='10' Name='Column-10'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Preci  o   unitari  o   d  e   vent  a' ReferenceIdx='11' Name='Preci  o   unitari  o   d  e   vent  a'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-12' ReferenceIdx='12' Name='Column-12'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-13' ReferenceIdx='13' Name='Column-13'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&#x9;&lt;Column xsi:type='DataColumn' ReferenceName='Column-14' ReferenceIdx='14' Name='Column-14'&gt;&#xA;&#x9;&#x9;&lt;IsValidName&gt;true&lt;/IsValidName&gt;&#xA;&#x9;&#x9;&lt;ValidationErrorMessage /&gt;&#xA;&#x9;&#x9;&lt;IsExtra&gt;false&lt;/IsExtra&gt;&#xA;&#x9;&#x9;&lt;CanExtractSimilar&gt;false&lt;/CanExtractSimilar&gt;&#xA;&#x9;&#x9;&lt;Format xsi:type='TextColumnFormat' /&gt;&#xA;&#x9;&lt;/Column&gt;&#xA;&lt;/Table&gt;" ExtractMetadata="&lt;extract-table get_columns_name='1' get_empty_columns='1' columns_name_source='Longest' /&gt;" sap:VirtualizedContainerService.HintSize="354,180" sap2010:WorkflowViewState.IdRef="NExtractData_2" LimitExtractionTo="None" MaximumResults="0" ScopeIdentifier="e3b8ac46-2984-438e-8dd5-80404a9e75a5" Version="V3">
                                      <uix:NExtractData.Target>
                                        <uix:TargetAnchorable ContentHash="HGPKBg5fcUKXUhpLFrx8Lg" DesignTimeRectangle="709, 838, 808, 131" DesignTimeScaleFactor="1" ElementType="Table" FullSelectorArgument="&lt;wnd aaname='Panel de documentos' cls='AVL_AVView' title='AVScrolledPageView' /&gt;&lt;wnd cls='AVL_AVView' title='AVPageView' /&gt;&lt;ctrl idx='2' role='table' /&gt;" Guid="2cd088d5-ea90-4c3b-8793-6bf931cf142e" InformativeScreenshot="b4f6eaa5fa14335efe174faed1788b81.png" Reference="0itd1ZoWLU-hfN2MqNp32A/vHjlIjId3kWN3m6CnAsTnw" ScopeSelectorArgument="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='471488e6e188afab41f326e70f605440f424b5803ed6a7989dc53a59cccb32b2*' /&gt;" SearchSteps="Selector" Version="V4" Visibility="Interactive" />
                                      </uix:NExtractData.Target>
                                    </uix:NExtractData>
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Hoja3&quot;)]" DisplayName="Escribir TablaDeDatos a Excel" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="976,191" sap2010:WorkflowViewState.IdRef="WriteRangeX_2" IgnoreEmptySource="False" Source="[ExtractDataTable]" />
                              <ueab:ReadRangeX DisplayName="Leer rango" sap:VirtualizedContainerService.HintSize="976,201" sap2010:WorkflowViewState.IdRef="ReadRangeX_3" Range="[Excel.Sheet(&quot;Hoja3&quot;)]" SaveTo="[ExtractDataTable]" />
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="976,114" sap2010:WorkflowViewState.IdRef="Assign_169">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="scg:List(x:String)">[columnNames]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="scg:List(x:String)">[New List(Of String)(ExtractDataTable.Columns.Cast(Of System.Data.DataColumn)().Select(Function(c) c.ColumnName))]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="x:String" CurrentIndex="{x:Null}" DisplayName="Para cada currentText" sap:VirtualizedContainerService.HintSize="976,769" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[columnNames]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="x:String">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="x:String" Name="currentText" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Cuerpo" sap:VirtualizedContainerService.HintSize="592,623" sap2010:WorkflowViewState.IdRef="Sequence_65">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If Condition="[String.IsNullOrEmpty(columname)]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="530,535" sap2010:WorkflowViewState.IdRef="If_8">
                                        <If.Then>
                                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,271" sap2010:WorkflowViewState.IdRef="Sequence_66">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                            <ueab:DeleteColumnX ColumnName="[columname]" DisplayName="Eliminar columna" HasHeaders="False" sap:VirtualizedContainerService.HintSize="434,183" sap2010:WorkflowViewState.IdRef="DeleteColumnX_1" Range="[ExtractDataTable]" />
                                          </Sequence>
                                        </If.Then>
                                        <If.Else>
                                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_67">
                                            <sap:WorkflowViewStateService.ViewState>
                                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                              </scg:Dictionary>
                                            </sap:WorkflowViewStateService.ViewState>
                                          </Sequence>
                                        </If.Else>
                                      </If>
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                              </ui:ForEach>
                              <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Hoja3&quot;)]" DisplayName="Escribir TablaDeDatos a Excel" ExcludeHeaders="True" sap:VirtualizedContainerService.HintSize="976,191" sap2010:WorkflowViewState.IdRef="WriteRangeX_3" IgnoreEmptySource="False" Source="[ExtractDataTable]" />
                              <ueab:ReadRangeX DisplayName="Leer rango" sap:VirtualizedContainerService.HintSize="976,201" sap2010:WorkflowViewState.IdRef="ReadRangeX_1" Range="[Excel.Sheet(&quot;Hoja3&quot;).Range(&quot;A:A&quot;)]" SaveTo="[Rowsdt]" />
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="976,114" sap2010:WorkflowViewState.IdRef="Assign_30">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:Int32">[filasproductos]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:Int32">[Rowsdt.Rows.Count]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="976,114" sap2010:WorkflowViewState.IdRef="Assign_31">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[NameProducto1]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[String.Join(Environment.NewLine, ExtractDataTable.AsEnumerable().Select(Function(row) String.Join(", ", row.ItemArray)))]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="976,114" sap2010:WorkflowViewState.IdRef="Assign_32">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[datoslimpios]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[NameProducto1.Replace("Descripció","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="976,114" sap2010:WorkflowViewState.IdRef="Assign_33">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[NameProducto1]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[datoslimpios.Replace("n","")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="976,114" sap2010:WorkflowViewState.IdRef="Assign_34">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[NameProducto1]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[NameProducto1.Replace("\n", "").Replace("\r", "").Replace(" ", "")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="976,114" sap2010:WorkflowViewState.IdRef="Assign_35">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[NameProducto1]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(NameProducto1, "\s+", "")]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="976,114" sap2010:WorkflowViewState.IdRef="Assign_23">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[Newtonsoft.Json.JsonConvert.SerializeObject(New With { .username = "joseavargasc06@gmail.com", .access_key = "OThhNDMxN2UtOTZlOC00ZGIwLWE3NWUtNDYwYmIzMTYwODFiOm9yfiFae3gyfUI=" })]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/auth" sap:VirtualizedContainerService.HintSize="976,102" sap2010:WorkflowViewState.IdRef="HttpClient_3" Method="POST" Result="[salida]" TimeoutMS="6000">
                                <ui:HttpClient.Attachments>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                </ui:HttpClient.Attachments>
                                <ui:HttpClient.Cookies>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                </ui:HttpClient.Cookies>
                                <ui:HttpClient.Headers>
                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                </ui:HttpClient.Headers>
                                <ui:HttpClient.Parameters>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                </ui:HttpClient.Parameters>
                                <ui:HttpClient.UrlSegments>
                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                </ui:HttpClient.UrlSegments>
                              </ui:HttpClient>
                              <ui:DeserializeJson x:TypeArguments="njl:JObject" JsonSample="{x:Null}" DisplayName="Deserializar JSON" sap:VirtualizedContainerService.HintSize="976,122" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[jsonresponse]" JsonString="[salida]" />
                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="976,114" sap2010:WorkflowViewState.IdRef="Assign_25">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[Acesskey]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[jsonresponse("access_token").ToString()]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:CommentOut DisplayName="Comentar" sap:VirtualizedContainerService.HintSize="976,307" sap2010:WorkflowViewState.IdRef="CommentOut_2">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Actividades ignoradas" sap:VirtualizedContainerService.HintSize="416,196" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="354,108" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[salida]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <ui:CommentOut DisplayName="Comentar" sap:VirtualizedContainerService.HintSize="976,307" sap2010:WorkflowViewState.IdRef="CommentOut_3">
                                <ui:CommentOut.Body>
                                  <Sequence DisplayName="Actividades ignoradas" sap:VirtualizedContainerService.HintSize="416,196" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="354,108" sap2010:WorkflowViewState.IdRef="MessageBox_1" Text="[Acesskey]" />
                                  </Sequence>
                                </ui:CommentOut.Body>
                              </ui:CommentOut>
                              <If Condition="[filasproductos&lt;2]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="976,27463" sap2010:WorkflowViewState.IdRef="If_2">
                                <If.Then>
                                  <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="688,9576" sap2010:WorkflowViewState.IdRef="Sequence_17">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;B2&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="626,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_7">
                                      <ueab:ReadCellValueX.SaveTo>
                                        <OutArgument x:TypeArguments="x:String">[Cantidad]</OutArgument>
                                      </ueab:ReadCellValueX.SaveTo>
                                    </ueab:ReadCellValueX>
                                    <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;C2&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="626,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_8">
                                      <ueab:ReadCellValueX.SaveTo>
                                        <OutArgument x:TypeArguments="x:String">[PrecioUnitario]</OutArgument>
                                      </ueab:ReadCellValueX.SaveTo>
                                    </ueab:ReadCellValueX>
                                    <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;G2&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="626,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_9">
                                      <ueab:ReadCellValueX.SaveTo>
                                        <OutArgument x:TypeArguments="x:String">[Iva]</OutArgument>
                                      </ueab:ReadCellValueX.SaveTo>
                                    </ueab:ReadCellValueX>
                                    <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;D2&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="626,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_10">
                                      <ueab:ReadCellValueX.SaveTo>
                                        <OutArgument x:TypeArguments="x:String">[Descuento]</OutArgument>
                                      </ueab:ReadCellValueX.SaveTo>
                                    </ueab:ReadCellValueX>
                                    <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja1&quot;).Cell(&quot;F1&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="626,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_11">
                                      <ueab:ReadCellValueX.SaveTo>
                                        <OutArgument x:TypeArguments="x:String">[ValorFinal2]</OutArgument>
                                      </ueab:ReadCellValueX.SaveTo>
                                    </ueab:ReadCellValueX>
                                    <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;F2&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="626,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_12">
                                      <ueab:ReadCellValueX.SaveTo>
                                        <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                      </ueab:ReadCellValueX.SaveTo>
                                    </ueab:ReadCellValueX>
                                    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="626,114" sap2010:WorkflowViewState.IdRef="Assign_38">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[PrecioUnitario]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(PrecioUnitario, "[^0-9,]", "")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="626,114" sap2010:WorkflowViewState.IdRef="Assign_39">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[Cantidad]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Cantidad, "[^0-9,]", "")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="626,114" sap2010:WorkflowViewState.IdRef="Assign_40">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[Descuento]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Descuento, "[^0-9,]", "")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="626,114" sap2010:WorkflowViewState.IdRef="Assign_41">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[Cantidad]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(cantidad, ",", ".")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="626,114" sap2010:WorkflowViewState.IdRef="Assign_42">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[PrecioUnitario]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(PrecioUnitario, ",", ".")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="626,114" sap2010:WorkflowViewState.IdRef="Assign_43">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[Descuento]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Descuento, ",", ".")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:IfElseIfV2 Condition="[Iva Is Nothing]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="626,604" sap2010:WorkflowViewState.IdRef="IfElseIfV2_2">
                                      <ui:IfElseIfV2.Else>
                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_22">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_37">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[Iva]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Iva, "[^0-9.]", "")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:IfElseIfV2.Else>
                                      <ui:IfElseIfV2.ElseIfs>
                                        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True" />
                                      </ui:IfElseIfV2.ElseIfs>
                                      <ui:IfElseIfV2.Then>
                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_21">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_36">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[Iva]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:IfElseIfV2.Then>
                                    </ui:IfElseIfV2>
                                    <ui:IfElseIfV2 Condition="[Iva Is Nothing or Iva=&quot;000&quot; or Iva=&quot;&quot;]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="626,718" sap2010:WorkflowViewState.IdRef="IfElseIfV2_3">
                                      <ui:IfElseIfV2.Else>
                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,307" sap2010:WorkflowViewState.IdRef="Sequence_24">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_45">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(ValorIva, "[^0-9,]", "")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_46">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(ValorIva, ",", ".")]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:IfElseIfV2.Else>
                                      <ui:IfElseIfV2.ElseIfs>
                                        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True" />
                                      </ui:IfElseIfV2.ElseIfs>
                                      <ui:IfElseIfV2.Then>
                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_23">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_44">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">0.00</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </ui:IfElseIfV2.Then>
                                    </ui:IfElseIfV2>
                                    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="626,114" sap2010:WorkflowViewState.IdRef="Assign_51">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[Fecha]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(Fecha, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="626,114" sap2010:WorkflowViewState.IdRef="Assign_53">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Double">[Cantidad2]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Double">[Double.Parse(Cantidad)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="626,114" sap2010:WorkflowViewState.IdRef="Assign_54">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:Double">[PrecioUnitario2]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:Double">[Double.Parse(PrecioUnitario)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <ui:IfElseIfV2 Condition="[Iva = &quot;5.00&quot;]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="626,5886" sap2010:WorkflowViewState.IdRef="IfElseIfV2_4">
                                      <ui:IfElseIfV2.Else>
                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="592,1868" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[Double.Parse(Descuento) &gt; 0]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="530,1780" sap2010:WorkflowViewState.IdRef="If_6">
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,867" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:Double" Name="Descuento2" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_61">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Double">[Descuento2]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Double">[Double.Parse(Descuento)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_80">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_81">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (19/ 100), 2))]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_82">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ValorFinal2]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[(CDbl(VB) + CDbl(ValorIva)).ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_83">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Double">[Double.Parse(ValorFinal2)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_62">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "2578",
            .description = "HARINA TG APOLO X 50",
            .quantity = Cantidad2,
            .price = PrecioUnitario2,
            .discount = Descuento2,
            .taxes = New Object() {
                New With {.id = 13051}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="HttpClient_9" Method="POST" Result="[salida]">
                                                  <ui:HttpClient.Attachments>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Attachments>
                                                  <ui:HttpClient.Cookies>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Cookies>
                                                  <ui:HttpClient.Headers>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                  </ui:HttpClient.Headers>
                                                  <ui:HttpClient.Parameters>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Parameters>
                                                  <ui:HttpClient.UrlSegments>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.UrlSegments>
                                                </ui:HttpClient>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,752" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_84">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_85">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (19/ 100), 2))]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_86">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ValorFinal2]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[(CDbl(VB) + CDbl(ValorIva)).ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_87">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Double">[Double.Parse(ValorFinal2)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_63">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "2578",
            .description = "HARINA TG APOLO X 50",
            .quantity = Cantidad2,
            .price = PrecioUnitario2,
            .discount = 0,
            .taxes = New Object() {
                New With {.id = 13051}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,93" sap2010:WorkflowViewState.IdRef="HttpClient_10" Method="POST" Result="[salida]" TimeoutMS="6000">
                                                  <ui:HttpClient.Attachments>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Attachments>
                                                  <ui:HttpClient.Cookies>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Cookies>
                                                  <ui:HttpClient.Headers>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                  </ui:HttpClient.Headers>
                                                  <ui:HttpClient.Parameters>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Parameters>
                                                  <ui:HttpClient.UrlSegments>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.UrlSegments>
                                                </ui:HttpClient>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ui:IfElseIfV2.Else>
                                      <ui:IfElseIfV2.ElseIfs>
                                        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                          <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Iva=&quot;&quot; or Iva=&quot;000&quot;]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_1">
                                            <ui:IfElseIfBlock.Then>
                                              <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="592,1873" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <If Condition="[Double.Parse(Descuento) &gt; 0]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="530,1785" sap2010:WorkflowViewState.IdRef="If_5">
                                                  <If.Then>
                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,868" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                                      <Sequence.Variables>
                                                        <Variable x:TypeArguments="x:Double" Name="Descuento2" />
                                                      </Sequence.Variables>
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_58">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Double">[Descuento2]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Double">[Double.Parse(Descuento)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_72">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_73">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (0 / 100), 2))]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_74">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[ValorFinal2]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[(CDbl(VB) + CDbl(ValorIva)).ToString]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_75">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Double">[Double.Parse(ValorFinal2)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="Assign_59">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "2578",
            .description = "HARINA TG APOLO X 50",
            .quantity = Cantidad2,
            .price = PrecioUnitario2,
            .discount = Descuento2,
            .taxes = New Object() {
                New With {.id = 14282}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="HttpClient_7" Method="POST" Result="[salida]">
                                                        <ui:HttpClient.Attachments>
                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                        </ui:HttpClient.Attachments>
                                                        <ui:HttpClient.Cookies>
                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                        </ui:HttpClient.Cookies>
                                                        <ui:HttpClient.Headers>
                                                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                        </ui:HttpClient.Headers>
                                                        <ui:HttpClient.Parameters>
                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                        </ui:HttpClient.Parameters>
                                                        <ui:HttpClient.UrlSegments>
                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                        </ui:HttpClient.UrlSegments>
                                                      </ui:HttpClient>
                                                    </Sequence>
                                                  </If.Then>
                                                  <If.Else>
                                                    <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,756" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                                      <sap:WorkflowViewStateService.ViewState>
                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                        </scg:Dictionary>
                                                      </sap:WorkflowViewStateService.ViewState>
                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_76">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_77">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (0 / 100), 2))]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_78">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[ValorFinal2]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String">[(CDbl(VB) + CDbl(ValorIva)).ToString]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_79">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Double">[Double.Parse(ValorFinal2)]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_60">
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "2578",
            .description = "HARINA TG APOLO X 50",
            .quantity = Cantidad2,
            .price = PrecioUnitario2,
            .discount = 0,
            .taxes = New Object() {
                New With {.id = 14282}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,93" sap2010:WorkflowViewState.IdRef="HttpClient_8" Method="POST" Result="[salida]" TimeoutMS="6000">
                                                        <ui:HttpClient.Attachments>
                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                        </ui:HttpClient.Attachments>
                                                        <ui:HttpClient.Cookies>
                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                        </ui:HttpClient.Cookies>
                                                        <ui:HttpClient.Headers>
                                                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                          <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                        </ui:HttpClient.Headers>
                                                        <ui:HttpClient.Parameters>
                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                        </ui:HttpClient.Parameters>
                                                        <ui:HttpClient.UrlSegments>
                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                        </ui:HttpClient.UrlSegments>
                                                      </ui:HttpClient>
                                                    </Sequence>
                                                  </If.Else>
                                                </If>
                                              </Sequence>
                                            </ui:IfElseIfBlock.Then>
                                          </ui:IfElseIfBlock>
                                        </sc:BindingList>
                                      </ui:IfElseIfV2.ElseIfs>
                                      <ui:IfElseIfV2.Then>
                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="592,1878" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <If Condition="[Double.Parse(Descuento) &gt; 0]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="530,1790" sap2010:WorkflowViewState.IdRef="If_4">
                                            <If.Then>
                                              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,871" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                                <Sequence.Variables>
                                                  <Variable x:TypeArguments="x:Double" Name="Descuento2" />
                                                </Sequence.Variables>
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_57">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Double">[Descuento2]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Double">[Double.Parse(Descuento)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_65">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_66">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (5 / 100), 2))]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_67">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ValorFinal2]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[(CDbl(VB) + CDbl(ValorIva)).ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_55">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Double">[Double.Parse(ValorFinal2)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="Assign_52">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "2578",
            .description = "HARINA TG APOLO X 50",
            .quantity = Cantidad2,
            .price = PrecioUnitario2,
            .discount = Descuento2,
            .taxes = New Object() {
                New With {.id = 13052}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="HttpClient_6" Method="POST" Result="[salida]">
                                                  <ui:HttpClient.Attachments>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Attachments>
                                                  <ui:HttpClient.Cookies>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Cookies>
                                                  <ui:HttpClient.Headers>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                  </ui:HttpClient.Headers>
                                                  <ui:HttpClient.Parameters>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Parameters>
                                                  <ui:HttpClient.UrlSegments>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.UrlSegments>
                                                </ui:HttpClient>
                                              </Sequence>
                                            </If.Then>
                                            <If.Else>
                                              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,758" sap2010:WorkflowViewState.IdRef="Sequence_28">
                                                <sap:WorkflowViewStateService.ViewState>
                                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                  </scg:Dictionary>
                                                </sap:WorkflowViewStateService.ViewState>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_68">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_69">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (5 / 100), 2))]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_70">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[ValorFinal2]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String">[(CDbl(VB) + CDbl(ValorIva)).ToString]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_71">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:Double">[Double.Parse(ValorFinal2)]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,116" sap2010:WorkflowViewState.IdRef="Assign_56">
                                                  <Assign.To>
                                                    <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                  </Assign.To>
                                                  <Assign.Value>
                                                    <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "2578",
            .description = "HARINA TG APOLO X 50",
            .quantity = Cantidad2,
            .price = PrecioUnitario2,
            .discount = 0,
            .taxes = New Object() {
                New With {.id = 13052}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                  </Assign.Value>
                                                </Assign>
                                                <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,94" sap2010:WorkflowViewState.IdRef="HttpClient_5" Method="POST" Result="[salida]" TimeoutMS="6000">
                                                  <ui:HttpClient.Attachments>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Attachments>
                                                  <ui:HttpClient.Cookies>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Cookies>
                                                  <ui:HttpClient.Headers>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                    <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                  </ui:HttpClient.Headers>
                                                  <ui:HttpClient.Parameters>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.Parameters>
                                                  <ui:HttpClient.UrlSegments>
                                                    <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                  </ui:HttpClient.UrlSegments>
                                                </ui:HttpClient>
                                              </Sequence>
                                            </If.Else>
                                          </If>
                                        </Sequence>
                                      </ui:IfElseIfV2.Then>
                                    </ui:IfElseIfV2>
                                    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="626,108" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[salida]" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="942,17717" sap2010:WorkflowViewState.IdRef="Sequence_18">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:IfElseIfV2 Condition="[filasproductos=2]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="880,17629" sap2010:WorkflowViewState.IdRef="IfElseIfV2_5">
                                      <ui:IfElseIfV2.Else>
                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </Sequence>
                                      </ui:IfElseIfV2.Else>
                                      <ui:IfElseIfV2.ElseIfs>
                                        <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True" />
                                      </ui:IfElseIfV2.ElseIfs>
                                      <ui:IfElseIfV2.Then>
                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="846,17317" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <ui:RepeatNumberOfTimesX DisplayName="Repetir número de veces" sap:VirtualizedContainerService.HintSize="784,17229" sap2010:WorkflowViewState.IdRef="RepeatNumberOfTimesX_1" NumberOfTimes="2" StartAt="1">
                                            <ui:RepeatNumberOfTimesX.Body>
                                              <ActivityAction x:TypeArguments="x:Int32">
                                                <ActivityAction.Argument>
                                                  <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentItem" />
                                                </ActivityAction.Argument>
                                                <Sequence DisplayName="Hacer" sap:VirtualizedContainerService.HintSize="750,17042" sap2010:WorkflowViewState.IdRef="Sequence_38">
                                                  <sap:WorkflowViewStateService.ViewState>
                                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                    </scg:Dictionary>
                                                  </sap:WorkflowViewStateService.ViewState>
                                                  <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="688,114" sap2010:WorkflowViewState.IdRef="Assign_88">
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">[Contador2]</OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">[Contador2+1]</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <If Condition="[Contador2=1]" DisplayName="Si" sap:VirtualizedContainerService.HintSize="688,16840" sap2010:WorkflowViewState.IdRef="If_7">
                                                    <If.Then>
                                                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="506,1909" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;B2&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_13">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[Cantidad]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;C2&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_14">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[PrecioUnitario]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;G2&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_15">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[Iva]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;D2&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_16">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[Descuento]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja1&quot;).Cell(&quot;F1&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_17">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[ValorFinal2]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;F2&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="444,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_18">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="444,114" sap2010:WorkflowViewState.IdRef="Assign_89">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[PrecioUnitario]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(PrecioUnitario, "[^0-9,]", "")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="444,114" sap2010:WorkflowViewState.IdRef="Assign_90">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[Cantidad]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Cantidad, "[^0-9,]", "")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="444,114" sap2010:WorkflowViewState.IdRef="Assign_91">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[Descuento]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Descuento, "[^0-9,]", "")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="444,114" sap2010:WorkflowViewState.IdRef="Assign_92">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[Cantidad]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(cantidad, ",", ".")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="444,114" sap2010:WorkflowViewState.IdRef="Assign_93">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[PrecioUnitario]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(PrecioUnitario, ",", ".")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="444,105" sap2010:WorkflowViewState.IdRef="Assign_94">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[Descuento]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Descuento, ",", ".")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                      </Sequence>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="654,14770" sap2010:WorkflowViewState.IdRef="Sequence_40">
                                                        <sap:WorkflowViewStateService.ViewState>
                                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                          </scg:Dictionary>
                                                        </sap:WorkflowViewStateService.ViewState>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;B3&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="592,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_19">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[CantidadProducto2]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;C3&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="592,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_20">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[PreciounitarioProducto2]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;G3&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="592,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_21">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[IvaProducto2]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;D3&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="592,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_22">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[Descuentoproducto2]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja1&quot;).Cell(&quot;F1&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="592,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_23">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[ValorFinalProducto2]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <ueab:ReadCellValueX Cell="[Excel.Sheet(&quot;Hoja3&quot;).Cell(&quot;F3&quot;)]" DisplayName="Leer el valor de la celda" GetFormattedText="True" sap:VirtualizedContainerService.HintSize="592,191" sap2010:WorkflowViewState.IdRef="ReadCellValueX_24">
                                                          <ueab:ReadCellValueX.SaveTo>
                                                            <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                          </ueab:ReadCellValueX.SaveTo>
                                                        </ueab:ReadCellValueX>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="592,114" sap2010:WorkflowViewState.IdRef="Assign_95">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[PrecioUnitarioProducto2]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(PrecioUnitarioProducto2, "[^0-9,]", "")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="592,114" sap2010:WorkflowViewState.IdRef="Assign_96">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[CantidadProducto2]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(CantidadProducto2, "[^0-9,]", "")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="592,114" sap2010:WorkflowViewState.IdRef="Assign_97">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[Descuentoproducto2]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Descuentoproducto2, "[^0-9,]", "")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="592,114" sap2010:WorkflowViewState.IdRef="Assign_98">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[CantidadProducto2]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(CantidadProducto2, ",", ".")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="592,114" sap2010:WorkflowViewState.IdRef="Assign_99">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[PreciounitarioProducto2]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(PreciounitarioProducto2, ",", ".")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="592,114" sap2010:WorkflowViewState.IdRef="Assign_100">
                                                          <Assign.To>
                                                            <OutArgument x:TypeArguments="x:String">[Descuentoproducto2]</OutArgument>
                                                          </Assign.To>
                                                          <Assign.Value>
                                                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Descuentoproducto2, ",", ".")]</InArgument>
                                                          </Assign.Value>
                                                        </Assign>
                                                        <ui:IfElseIfV2 Condition="[Iva Is Nothing]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="592,604" sap2010:WorkflowViewState.IdRef="IfElseIfV2_6">
                                                          <ui:IfElseIfV2.Else>
                                                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_102">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[Iva]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(Iva, "[^0-9.]", "")]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </ui:IfElseIfV2.Else>
                                                          <ui:IfElseIfV2.ElseIfs>
                                                            <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True" />
                                                          </ui:IfElseIfV2.ElseIfs>
                                                          <ui:IfElseIfV2.Then>
                                                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_101">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[Iva]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <Literal x:TypeArguments="x:String" Value="" />
                                                                  </InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </ui:IfElseIfV2.Then>
                                                        </ui:IfElseIfV2>
                                                        <ui:IfElseIfV2 Condition="[Iva Is Nothing or Iva=&quot;000&quot; or Iva=&quot;&quot;]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="592,718" sap2010:WorkflowViewState.IdRef="IfElseIfV2_7">
                                                          <ui:IfElseIfV2.Else>
                                                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,307" sap2010:WorkflowViewState.IdRef="Sequence_44">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_104">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(ValorIva, "[^0-9,]", "")]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_105">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(ValorIva, ",", ".")]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </ui:IfElseIfV2.Else>
                                                          <ui:IfElseIfV2.ElseIfs>
                                                            <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True" />
                                                          </ui:IfElseIfV2.ElseIfs>
                                                          <ui:IfElseIfV2.Then>
                                                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_103">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">0.00</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </ui:IfElseIfV2.Then>
                                                        </ui:IfElseIfV2>
                                                        <ui:IfElseIfV2 Condition="[IvaProducto2 Is Nothing]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="592,604" sap2010:WorkflowViewState.IdRef="IfElseIfV2_8">
                                                          <ui:IfElseIfV2.Else>
                                                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_46">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_107">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[IvaProducto2]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(IvaProducto2, "[^0-9.]", "")]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </ui:IfElseIfV2.Else>
                                                          <ui:IfElseIfV2.ElseIfs>
                                                            <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True" />
                                                          </ui:IfElseIfV2.ElseIfs>
                                                          <ui:IfElseIfV2.Then>
                                                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_45">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_106">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[IvaProducto2]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">
                                                                    <Literal x:TypeArguments="x:String" Value="" />
                                                                  </InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </ui:IfElseIfV2.Then>
                                                        </ui:IfElseIfV2>
                                                        <ui:IfElseIfV2 Condition="[IvaProducto2 Is Nothing or Iva=&quot;000&quot; or Iva=&quot;&quot;]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="592,718" sap2010:WorkflowViewState.IdRef="IfElseIfV2_9">
                                                          <ui:IfElseIfV2.Else>
                                                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,307" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_109">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(ValorIvaproducto2, "[^0-9,]", "")]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_110">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Replace(ValorIvaproducto2, ",", ".")]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </ui:IfElseIfV2.Else>
                                                          <ui:IfElseIfV2.ElseIfs>
                                                            <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True" />
                                                          </ui:IfElseIfV2.ElseIfs>
                                                          <ui:IfElseIfV2.Then>
                                                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,193" sap2010:WorkflowViewState.IdRef="Sequence_47">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_108">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">0.00</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </Sequence>
                                                          </ui:IfElseIfV2.Then>
                                                        </ui:IfElseIfV2>
                                                        <ui:IfElseIfV2 Condition="[Iva=&quot;19.00&quot; And IvaProducto2=&quot;19.00&quot;]" DisplayName="Else If" sap:VirtualizedContainerService.HintSize="592,10208" sap2010:WorkflowViewState.IdRef="IfElseIfV2_10">
                                                          <ui:IfElseIfV2.Else>
                                                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,103" sap2010:WorkflowViewState.IdRef="Sequence_50">
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                            </Sequence>
                                                          </ui:IfElseIfV2.Else>
                                                          <ui:IfElseIfV2.ElseIfs>
                                                            <sc:BindingList x:TypeArguments="ui:IfElseIfBlock" AllowEdit="True" AllowNew="True" AllowRemove="True" RaiseListChangedEvents="True">
                                                              <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Iva=&quot;19.00&quot; And IvaProducto2=&quot;5.00&quot;]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_2">
                                                                <ui:IfElseIfBlock.Then>
                                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="558,1208" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,1120" sap2010:WorkflowViewState.IdRef="Sequence_52">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="x:String" Name="VBProducto2" />
                                                                      </Sequence.Variables>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_118">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_119">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (19/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_120">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VBProducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(CantidadProducto2) * Convert.ToDouble(PreciounitarioProducto2)) - Convert.ToDouble(Descuentoproducto2), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_121">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VBProducto2) * (5/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_122">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Double">[Math.Round(CDbl(ValorIva) + CDbl(ValorIvaproducto2) + CDbl(VB) + CDbl(VBProducto2), 2)]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_123">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[Fecha]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(Fecha, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd")]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_124">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = Cantidad,
            .price = PrecioUnitario,
            .discount = Descuento,
            .taxes = New Object() {
                New With {.id = 13051}
            }
        },
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = CantidadProducto2,
            .price = PreciounitarioProducto2,
            .discount = Descuentoproducto2,
            .taxes = New Object() {
                New With {.id = 13052}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,102" sap2010:WorkflowViewState.IdRef="HttpClient_12" Method="POST" Result="[salida]">
                                                                        <ui:HttpClient.Attachments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Attachments>
                                                                        <ui:HttpClient.Cookies>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Cookies>
                                                                        <ui:HttpClient.Headers>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                                        </ui:HttpClient.Headers>
                                                                        <ui:HttpClient.Parameters>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Parameters>
                                                                        <ui:HttpClient.UrlSegments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.UrlSegments>
                                                                      </ui:HttpClient>
                                                                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="MessageBox_5" Text="[salida]" />
                                                                    </Sequence>
                                                                  </Sequence>
                                                                </ui:IfElseIfBlock.Then>
                                                              </ui:IfElseIfBlock>
                                                              <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Iva=&quot;5.00&quot; And IvaProducto2=&quot;19.00&quot;]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_3">
                                                                <ui:IfElseIfBlock.Then>
                                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="558,1208" sap2010:WorkflowViewState.IdRef="Sequence_54">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,1120" sap2010:WorkflowViewState.IdRef="Sequence_53">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="x:String" Name="VBProducto2" />
                                                                      </Sequence.Variables>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_125">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_126">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (5/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_127">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VBProducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(CantidadProducto2) * Convert.ToDouble(PreciounitarioProducto2)) - Convert.ToDouble(Descuentoproducto2), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_128">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VBProducto2) * (19/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_129">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Double">[Math.Round(CDbl(ValorIva) + CDbl(ValorIvaproducto2) + CDbl(VB) + CDbl(VBProducto2), 2)]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_130">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[Fecha]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(Fecha, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd")]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_131">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = Cantidad,
            .price = PrecioUnitario,
            .discount = Descuento,
            .taxes = New Object() {
                New With {.id = 13052}
            }
        },
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = CantidadProducto2,
            .price = PreciounitarioProducto2,
            .discount = Descuentoproducto2,
            .taxes = New Object() {
                New With {.id = 13051}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,102" sap2010:WorkflowViewState.IdRef="HttpClient_13" Method="POST" Result="[salida]">
                                                                        <ui:HttpClient.Attachments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Attachments>
                                                                        <ui:HttpClient.Cookies>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Cookies>
                                                                        <ui:HttpClient.Headers>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                                        </ui:HttpClient.Headers>
                                                                        <ui:HttpClient.Parameters>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Parameters>
                                                                        <ui:HttpClient.UrlSegments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.UrlSegments>
                                                                      </ui:HttpClient>
                                                                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="MessageBox_6" Text="[salida]" />
                                                                    </Sequence>
                                                                  </Sequence>
                                                                </ui:IfElseIfBlock.Then>
                                                              </ui:IfElseIfBlock>
                                                              <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Iva=&quot;5.00&quot; And IvaProducto2=&quot;5.00&quot;]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_4">
                                                                <ui:IfElseIfBlock.Then>
                                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="558,1208" sap2010:WorkflowViewState.IdRef="Sequence_56">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,1120" sap2010:WorkflowViewState.IdRef="Sequence_55">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="x:String" Name="VBProducto2" />
                                                                      </Sequence.Variables>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_132">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_133">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (5/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_134">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VBProducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(CantidadProducto2) * Convert.ToDouble(PreciounitarioProducto2)) - Convert.ToDouble(Descuentoproducto2), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_135">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VBProducto2) * (5/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_136">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Double">[Math.Round(CDbl(ValorIva) + CDbl(ValorIvaproducto2) + CDbl(VB) + CDbl(VBProducto2), 2)]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_137">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[Fecha]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(Fecha, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd")]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_138">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = Cantidad,
            .price = PrecioUnitario,
            .discount = Descuento,
            .taxes = New Object() {
                New With {.id = 13052}
            }
        },
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = CantidadProducto2,
            .price = PreciounitarioProducto2,
            .discount = Descuentoproducto2,
            .taxes = New Object() {
                New With {.id = 13052}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,102" sap2010:WorkflowViewState.IdRef="HttpClient_14" Method="POST" Result="[salida]">
                                                                        <ui:HttpClient.Attachments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Attachments>
                                                                        <ui:HttpClient.Cookies>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Cookies>
                                                                        <ui:HttpClient.Headers>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                                        </ui:HttpClient.Headers>
                                                                        <ui:HttpClient.Parameters>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Parameters>
                                                                        <ui:HttpClient.UrlSegments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.UrlSegments>
                                                                      </ui:HttpClient>
                                                                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="MessageBox_7" Text="[salida]" />
                                                                    </Sequence>
                                                                  </Sequence>
                                                                </ui:IfElseIfBlock.Then>
                                                              </ui:IfElseIfBlock>
                                                              <ui:IfElseIfBlock BlockType="ElseIf" Condition="[Iva=&quot;19.00&quot; And (IvaProducto2=&quot;000&quot; or IvaProducto2=&quot;&quot;)]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_5">
                                                                <ui:IfElseIfBlock.Then>
                                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="558,1208" sap2010:WorkflowViewState.IdRef="Sequence_58">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,1120" sap2010:WorkflowViewState.IdRef="Sequence_57">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="x:String" Name="VBProducto2" />
                                                                      </Sequence.Variables>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_139">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_140">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (19/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_141">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VBProducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(CantidadProducto2) * Convert.ToDouble(PreciounitarioProducto2)) - Convert.ToDouble(Descuentoproducto2), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_142">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VBProducto2) * (0/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_143">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Double">[Math.Round(CDbl(ValorIva) + CDbl(ValorIvaproducto2) + CDbl(VB) + CDbl(VBProducto2), 2)]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_144">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[Fecha]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(Fecha, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd")]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_145">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = Cantidad,
            .price = PrecioUnitario,
            .discount = Descuento,
            .taxes = New Object() {
                New With {.id = 13051}
            }
        },
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = CantidadProducto2,
            .price = PreciounitarioProducto2,
            .discount = Descuentoproducto2,
            .taxes = New Object() {
                New With {.id = 14282}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,102" sap2010:WorkflowViewState.IdRef="HttpClient_15" Method="POST" Result="[salida]">
                                                                        <ui:HttpClient.Attachments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Attachments>
                                                                        <ui:HttpClient.Cookies>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Cookies>
                                                                        <ui:HttpClient.Headers>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                                        </ui:HttpClient.Headers>
                                                                        <ui:HttpClient.Parameters>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Parameters>
                                                                        <ui:HttpClient.UrlSegments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.UrlSegments>
                                                                      </ui:HttpClient>
                                                                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="MessageBox_8" Text="[salida]" />
                                                                    </Sequence>
                                                                  </Sequence>
                                                                </ui:IfElseIfBlock.Then>
                                                              </ui:IfElseIfBlock>
                                                              <ui:IfElseIfBlock BlockType="ElseIf" Condition="[(Iva=&quot;000&quot; or Iva=&quot;&quot;) And IvaProducto2=&quot;19.00&quot;]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_6">
                                                                <ui:IfElseIfBlock.Then>
                                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="558,1208" sap2010:WorkflowViewState.IdRef="Sequence_60">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,1120" sap2010:WorkflowViewState.IdRef="Sequence_59">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="x:String" Name="VBProducto2" />
                                                                      </Sequence.Variables>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_146">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_147">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (0/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_148">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VBProducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(CantidadProducto2) * Convert.ToDouble(PreciounitarioProducto2)) - Convert.ToDouble(Descuentoproducto2), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_149">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VBProducto2) * (19/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_150">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Double">[Math.Round(CDbl(ValorIva) + CDbl(ValorIvaproducto2) + CDbl(VB) + CDbl(VBProducto2), 2)]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_151">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[Fecha]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(Fecha, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd")]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_152">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = Cantidad,
            .price = PrecioUnitario,
            .discount = Descuento,
            .taxes = New Object() {
                New With {.id = 14282}
            }
        },
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = CantidadProducto2,
            .price = PreciounitarioProducto2,
            .discount = Descuentoproducto2,
            .taxes = New Object() {
                New With {.id = 13051}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,102" sap2010:WorkflowViewState.IdRef="HttpClient_16" Method="POST" Result="[salida]">
                                                                        <ui:HttpClient.Attachments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Attachments>
                                                                        <ui:HttpClient.Cookies>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Cookies>
                                                                        <ui:HttpClient.Headers>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                                        </ui:HttpClient.Headers>
                                                                        <ui:HttpClient.Parameters>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Parameters>
                                                                        <ui:HttpClient.UrlSegments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.UrlSegments>
                                                                      </ui:HttpClient>
                                                                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="MessageBox_9" Text="[salida]" />
                                                                    </Sequence>
                                                                  </Sequence>
                                                                </ui:IfElseIfBlock.Then>
                                                              </ui:IfElseIfBlock>
                                                              <ui:IfElseIfBlock BlockType="ElseIf" Condition="[(Iva=&quot;000&quot; or Iva=&quot;&quot;) And IvaProducto2=&quot;5.00&quot;]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_7">
                                                                <ui:IfElseIfBlock.Then>
                                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="558,1208" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,1120" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="x:String" Name="VBProducto2" />
                                                                      </Sequence.Variables>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_153">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_154">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (0/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_155">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VBProducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(CantidadProducto2) * Convert.ToDouble(PreciounitarioProducto2)) - Convert.ToDouble(Descuentoproducto2), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_156">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VBProducto2) * (5/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_157">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Double">[Math.Round(CDbl(ValorIva) + CDbl(ValorIvaproducto2) + CDbl(VB) + CDbl(VBProducto2), 2)]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_158">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[Fecha]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(Fecha, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd")]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_159">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = Cantidad,
            .price = PrecioUnitario,
            .discount = Descuento,
            .taxes = New Object() {
                New With {.id = 14282}
            }
        },
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = CantidadProducto2,
            .price = PreciounitarioProducto2,
            .discount = Descuentoproducto2,
            .taxes = New Object() {
                New With {.id = 13052}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,102" sap2010:WorkflowViewState.IdRef="HttpClient_17" Method="POST" Result="[salida]">
                                                                        <ui:HttpClient.Attachments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Attachments>
                                                                        <ui:HttpClient.Cookies>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Cookies>
                                                                        <ui:HttpClient.Headers>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                                        </ui:HttpClient.Headers>
                                                                        <ui:HttpClient.Parameters>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Parameters>
                                                                        <ui:HttpClient.UrlSegments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.UrlSegments>
                                                                      </ui:HttpClient>
                                                                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="MessageBox_10" Text="[salida]" />
                                                                    </Sequence>
                                                                  </Sequence>
                                                                </ui:IfElseIfBlock.Then>
                                                              </ui:IfElseIfBlock>
                                                              <ui:IfElseIfBlock BlockType="ElseIf" Condition="[(Iva=&quot;000&quot; or Iva=&quot;&quot;) And (IvaProducto2=&quot;&quot; or IvaProducto2=&quot;000&quot;)]" DisplayName="If else if block" sap2010:WorkflowViewState.IdRef="IfElseIfBlock_8">
                                                                <ui:IfElseIfBlock.Then>
                                                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="558,1208" sap2010:WorkflowViewState.IdRef="Sequence_64">
                                                                    <sap:WorkflowViewStateService.ViewState>
                                                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                      </scg:Dictionary>
                                                                    </sap:WorkflowViewStateService.ViewState>
                                                                    <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,1120" sap2010:WorkflowViewState.IdRef="Sequence_63">
                                                                      <Sequence.Variables>
                                                                        <Variable x:TypeArguments="x:String" Name="VBProducto2" />
                                                                      </Sequence.Variables>
                                                                      <sap:WorkflowViewStateService.ViewState>
                                                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                        </scg:Dictionary>
                                                                      </sap:WorkflowViewStateService.ViewState>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_160">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_161">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (0/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_162">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[VBProducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(CantidadProducto2) * Convert.ToDouble(PreciounitarioProducto2)) - Convert.ToDouble(Descuentoproducto2), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_163">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VBProducto2) * (0/ 100), 2))]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_164">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Double">[Math.Round(CDbl(ValorIva) + CDbl(ValorIvaproducto2) + CDbl(VB) + CDbl(VBProducto2), 2)]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_165">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[Fecha]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(Fecha, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd")]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_166">
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = Cantidad,
            .price = PrecioUnitario,
            .discount = Descuento,
            .taxes = New Object() {
                New With {.id = 14282}
            }
        },
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = CantidadProducto2,
            .price = PreciounitarioProducto2,
            .discount = Descuentoproducto2,
            .taxes = New Object() {
                New With {.id = 14282}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,102" sap2010:WorkflowViewState.IdRef="HttpClient_18" Method="POST" Result="[salida]">
                                                                        <ui:HttpClient.Attachments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Attachments>
                                                                        <ui:HttpClient.Cookies>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Cookies>
                                                                        <ui:HttpClient.Headers>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                                          <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                                        </ui:HttpClient.Headers>
                                                                        <ui:HttpClient.Parameters>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.Parameters>
                                                                        <ui:HttpClient.UrlSegments>
                                                                          <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                        </ui:HttpClient.UrlSegments>
                                                                      </ui:HttpClient>
                                                                      <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="MessageBox_11" Text="[salida]" />
                                                                    </Sequence>
                                                                  </Sequence>
                                                                </ui:IfElseIfBlock.Then>
                                                              </ui:IfElseIfBlock>
                                                            </sc:BindingList>
                                                          </ui:IfElseIfV2.ElseIfs>
                                                          <ui:IfElseIfV2.Then>
                                                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,1097" sap2010:WorkflowViewState.IdRef="Sequence_49">
                                                              <Sequence.Variables>
                                                                <Variable x:TypeArguments="x:String" Name="VBProducto2" />
                                                              </Sequence.Variables>
                                                              <sap:WorkflowViewStateService.ViewState>
                                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                                </scg:Dictionary>
                                                              </sap:WorkflowViewStateService.ViewState>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_111">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[VB]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(Cantidad) * Convert.ToDouble(PrecioUnitario)) - Convert.ToDouble(Descuento), 2))]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_112">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[ValorIva]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VB) * (19/ 100), 2))]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_114">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[VBProducto2]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round((Convert.ToDouble(CantidadProducto2) * Convert.ToDouble(PreciounitarioProducto2)) - Convert.ToDouble(Descuentoproducto2), 2))]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_115">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[ValorIvaproducto2]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[Convert.ToString(Math.Round(Convert.ToDouble(VBProducto2) * (19/ 100), 2))]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_116">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Double">[ValorFinal3]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Double">[Math.Round(CDbl(ValorIva) + CDbl(ValorIvaproducto2) + CDbl(VB) + CDbl(VBProducto2), 2)]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,114" sap2010:WorkflowViewState.IdRef="Assign_117">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[Fecha]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String">[DateTime.ParseExact(Fecha, "dd/MM/yyyy", System.Globalization.CultureInfo.InvariantCulture).ToString("yyyy-MM-dd")]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <Assign DisplayName="Asignar" sap:VirtualizedContainerService.HintSize="434,115" sap2010:WorkflowViewState.IdRef="Assign_113">
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:String">[jsonbody]</OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:String" xml:space="preserve">[Newtonsoft.Json.JsonConvert.SerializeObject(New With {
    .document = New With {.id = 24256},
    .date = Fecha,
    .supplier = New With {.identification = Nit, .branch_office = 0},
    .provider_invoice = New With {.prefix = Prefijo, .number = Consecutivo},
    .discount_type = "Value",
    .supplier_by_item = False,
    .tax_included = False,
    .items = New Object() {
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = Cantidad,
            .price = PrecioUnitario,
            .discount = Descuento,
            .taxes = New Object() {
                New With {.id = 13051}
            }
        },
        New With {
            .type = "Product",
            .code = "1",
            .description = "Pruebas",
            .quantity = CantidadProducto2,
            .price = PreciounitarioProducto2,
            .discount = Descuentoproducto2,
            .taxes = New Object() {
                New With {.id = 13051}
            }
        }
    },
    .payments = New Object() {
        New With {.id = 5590, .value = ValorFinal3}
    }
})]</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                              <ui:HttpClient ClientCertificate="{x:Null}" ClientCertificatePassword="{x:Null}" ConsumerKey="{x:Null}" ConsumerSecret="{x:Null}" ContinueOnError="{x:Null}" FileAttachments="{x:Null}" OAuth1Token="{x:Null}" OAuth1TokenSecret="{x:Null}" OAuth2Token="{x:Null}" Password="{x:Null}" ResourcePath="{x:Null}" ResponseAttachment="{x:Null}" ResponseHeaders="{x:Null}" SecureClientCertificatePassword="{x:Null}" SecurePassword="{x:Null}" StatusCode="{x:Null}" TimeoutMS="{x:Null}" Username="{x:Null}" AcceptFormat="JSON" AuthenticationType="None" Body="[jsonbody]" BodyFormat="application/json" DisplayName="Solicitud HTTP" EnableSSLVerification="True" EndPoint="https://api.siigo.com/v1/purchases" sap:VirtualizedContainerService.HintSize="434,102" sap2010:WorkflowViewState.IdRef="HttpClient_11" Method="POST" Result="[salida]">
                                                                <ui:HttpClient.Attachments>
                                                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                </ui:HttpClient.Attachments>
                                                                <ui:HttpClient.Cookies>
                                                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                </ui:HttpClient.Cookies>
                                                                <ui:HttpClient.Headers>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="Authorization">[Acesskey]</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json</InArgument>
                                                                  <InArgument x:TypeArguments="x:String" x:Key="Partner-Id">Cisf</InArgument>
                                                                </ui:HttpClient.Headers>
                                                                <ui:HttpClient.Parameters>
                                                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                </ui:HttpClient.Parameters>
                                                                <ui:HttpClient.UrlSegments>
                                                                  <scg:Dictionary x:TypeArguments="x:String, InArgument(x:String)" />
                                                                </ui:HttpClient.UrlSegments>
                                                              </ui:HttpClient>
                                                              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Bandeja de mensajes" sap:VirtualizedContainerService.HintSize="434,108" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[salida]" />
                                                            </Sequence>
                                                          </ui:IfElseIfV2.Then>
                                                        </ui:IfElseIfV2>
                                                      </Sequence>
                                                    </If.Else>
                                                  </If>
                                                </Sequence>
                                              </ActivityAction>
                                            </ui:RepeatNumberOfTimesX.Body>
                                          </ui:RepeatNumberOfTimesX>
                                        </Sequence>
                                      </ui:IfElseIfV2.Then>
                                    </ui:IfElseIfV2>
                                  </Sequence>
                                </If.Else>
                              </If>
                              <ueab:ClearRangeX DisplayName="Borrar hoja/rango/tabla" HasHeaders="False" sap:VirtualizedContainerService.HintSize="976,141" sap2010:WorkflowViewState.IdRef="ClearRangeX_4" TargetRange="[Excel.Sheet(&quot;Hoja3&quot;).Range(&quot;A1:Z8096&quot;)]" />
                            </Sequence>
                          </ActivityAction>
                        </uix:NApplicationCard.Body>
                        <uix:NApplicationCard.TargetApp>
                          <uix:TargetApp Area="0, 0, 0, 0" Arguments="[cufe]" ContentHash="fmsloQbmEEGX_LKUHxkTIw" FilePath="C:\Program Files\Adobe\Acrobat DC\Acrobat\acrobat.exe" IconBase64="iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAJPSURBVFhH1ZY9aBRBFMevUVCUKIliOPHjEPzIkTRiOAWxSBobLawU7MQ2aBdFBBHkIHiFVjYhcGijyNkIKS5dIHCQSs6rQgq90mZvd7Z5vv9bNu7ODHGyN5xY/Jh9b96895+Zt8uWiOifYjjisdIRZo2hIdhiFvTcNgwHL1yLz45vD1a/UhAEe+fnD4oWH/2KJ/YFkos3pNfIYjh4AYUfP9iT74HBxjrFE/sHnG9zNxGGAwJsCYvgIsJw+BQA/iYiZwBXAdHrV0nDTR6k4HvXGpOSiJCeeK7XyxnAVYCaqVD4fkVERIuPrTFZwjdL2xy7pdfLGcBVQDx1SkZ15RKp+3eMeQN+O5Bbr5czgPMJzNcobNQlKU7CFqPjVUD47i3FJw6QOnfcOm/DqwA0HmJdmjDFqwA0nrp7m9TVaVK35qwxOl4FqDPjcvdhe5Xi8iFS5yelMePyYSmk5rhHvnzKrfEiIHr5TJLL/d+8TqpyLCl48eSfq+BRTma6kls7lAB8eNTpo0nR2SlS12bkGvAm4BSihYeJKBRm0BvqxuVcjsIC5K65MHYWvXiadL6t8TCP3nhwTwTr84UFwBc94cT8wcEzXkE9xoXCAnAC8GPntp25UliAL/5/AdVqVajX6zt2rVajVqtlzNnwIqDf78uY2r1eT0Skvt3wIgAFswLSMQWnkV2TxYsA7LbZbO7YnU5ntCeg2yjebrdHI2BYnAXgJ9KWYBjkx9RRwGd1odwddL9ZExUBuZCTcy/r9XJGCgc2oNYzDVstwzFqrM7RQaXfNljUiwb3UnIAAAAASUVORK5CYII=" InformativeScreenshot="00f984cd9ee313b238127f4ec9875603.png" Reference="0itd1ZoWLU-hfN2MqNp32A/CrxRPRyMqk-mSpK4fpVT-A" Selector="&lt;wnd app='acrobat.exe' cls='AcrobatSDIWindow' title='b89d53433ba3d2d1beb36a3a5ccdab95bf8f18801059dd02b79e46a74a917879*' /&gt;" Title="b89d53433ba3d2d1beb36a3a5ccdab95bf8f18801059dd02b79e46a74a917879799151c5acee42369a59f11967407b7b.pdf - Adobe Acrobat Reader (64-bit)" />
                        </uix:NApplicationCard.TargetApp>
                      </uix:NApplicationCard>
                    </Sequence>
                  </ActivityAction>
                </uix:NApplicationCard.Body>
                <uix:NApplicationCard.TargetApp>
                  <uix:TargetApp Area="0, 0, 0, 0" BrowserType="Chrome" IconBase64="iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAALbSURBVDhPhdNJT1NRHIbx+wWMswhYECqjOCAO4BAXfgJ37t2amLgxcWkcNsYhGioOkUggKgjK1Jbblpa2dKKlQKlgS1WoIBTE4ISrx/8t1iEsXJztL/e857nKDqeRYlcnJf0vKfO0stPbzC7fE/YEGqkceMy+4CP2hx5wMHyP6iEDh4fvcCRyi2Oj1zkevYZS2Gcmg5QKUp5B/H+QKg0Z1JA6QWoFuc3RyM00ohQ4LKwg3RS7OwR5IchzKrzPViEH/kZGVhAl396LhmzvM1Hg7ELvaqfI3SZXaqHM+5RyXxMV/gZ2B+qpDD6UL7nPob8QRWdzoHfYOT8+imFygtqpGIap19xNjlGXfIUhOcqNqUEuJFycirZTPVj/C7lLjSBKrtWF3u7kWiJB59wsHXMzcqbpTL2nK5XENJ/EsThD5MsC75c/8zw1zonhRkHupRElx+JhmyB5vQ62220UOlTZwySjdlEqm5R7XrDb10rNQBtnY05mfnzFMB1iX+ihbHIfJVv1oSE5VifbbPY0UiCIXpAiQUrc7ZT1twnUQrn3CS1zcQJLM1SHGqgSRMnqGSBH9VPtDlHp8qHr1RCrID3/IKX9rZR6mmmencC/9IGDwSYZtR5ls3mQPEuIntQi1xOT6GxOCu3asDaKnColLhMV/d0c8hs5M+aVK3yjNjkiT9zI3oEGlI3GIXRqGPfHz0x+XxZoAXV+Hkv6pLAtzOFenCf65RPTy99omX3LsWA7Felam1A2dEfIMg9zOvyGi6+TXIpNcjn2jivxN1ydSMiJczE+xrmxIU6GnezySGwSWiZ5ZV3XKzRkvTHMBlOQTWY/W1QPWRYX2VYHuTYbOrtKvsNEoVarS6v1T/LK2s5x0ogxwibTEFvMIbb2BMi2eMm1umWTPjK16lcl34qypiPGChIVZESQ8AqiBuR5/48IECeDrO+OsvE3EhTEn24kE1p+phH5b7TnLXZ38BOlqcjeuqm/RAAAAABJRU5ErkJggg==" InformativeScreenshot="70124232e7747fd7e49c1e31ca532fa7.jpg" Selector="&lt;html app='chrome.exe' title='DIAN | Acceder' /&gt;" Title="DIAN | Acceder" Url="https://catalogo-vpfe.dian.gov.co/User/SearchDocument" />
                </uix:NApplicationCard.TargetApp>
              </uix:NApplicationCard>
            </Sequence>
          </ActivityAction>
        </ueab:ExcelApplicationCard.Body>
      </ueab:ExcelApplicationCard>
    </ueab:SequenceX>
  </Sequence>
</Activity>